from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from keyboards import cancelkb

router = Router()

ADMIN_ID = '-1002224413709'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π ID

class MessageText(StatesGroup):
    text = State()
    reply = State()  # –î–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—Ç–≤–µ—Ç–∞

bot_message_id = None
messages = {}

@router.message(CommandStart())
async def start(message: Message, command: CommandStart, state: FSMContext):
    global bot_message_id
    referrer_id = command.args

    if not referrer_id:
        await message.answer(
            f'üöÄ–ù–∞—á–Ω–∏ –ø–æ–ª—É—á–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!\n\n–¢–≤–æ—è —Å—Å—ã–ª–∫–∞:\nüëâ t.me/anonimniyaskbot?start={message.from_user.id}\n\n–†–∞–∑–º–µ—Å—Ç–∏ —ç—Ç—É —Å—Å—ã–ª–∫—É ‚òùÔ∏è –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è Telegram/TikTok/Instagram, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è üí¨'
        )
    else:
        await state.update_data(referrer_id=referrer_id)
        await state.set_state(MessageText.text)
        sent_message = await message.answer(
            'üöÄ–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ–∫—É, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—É–±–ª–∏–∫–æ–≤–∞–ª —ç—Ç—É —Å—Å—ã–ª–∫—É\n\n‚úçÔ∏è–ù–∞–ø–∏—à–∏—Ç–µ —Å—é–¥–∞ –≤—Å—ë, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –µ–º—É –ø–µ—Ä–µ–¥–∞—Ç—å, –∏ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –æ–Ω –ø–æ–ª—É—á–∏—Ç –≤–∞—à–µ üí¨ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–æ –Ω–µ –±—É–¥–µ—Ç –∑–Ω–∞—Ç—å –æ—Ç –∫–æ–≥–æ',
            reply_markup=cancelkb
        )
        bot_message_id = sent_message.message_id

@router.message(MessageText.text)
async def yes_text(message: Message, state: FSMContext):
    data = await state.get_data()
    referrer_id = data.get("referrer_id")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    if message.photo:
        photo = message.photo[-1].file_id  # –ë–µ—Ä—ë–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å–∞–º–æ–≥–æ –±–æ–ª—å—à–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
        caption = message.caption or ""  # –ü–æ–¥–ø–∏—Å—å (–µ—Å–ª–∏ –µ—Å—Ç—å)
    else:
        photo = None
        caption = message.text or ""

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–ª–∞–¥–µ–ª—å—Ü—É
    if referrer_id:
        if photo:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é
            sent_message = await message.bot.send_photo(
                chat_id=referrer_id,
                photo=photo,
                caption=f'–í–∞–º –ø—Ä–∏—à–ª–æ –Ω–æ–≤–æ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n{caption}\n\n‚Ü©Ô∏è –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –∞–Ω–æ–Ω–∏–º–Ω–æ.'
            )
        else:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–∞
            sent_message = await message.bot.send_message(
                chat_id=referrer_id,
                text=f'–í–∞–º –ø—Ä–∏—à–ª–æ –Ω–æ–≤–æ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n{caption}\n\n‚Ü©Ô∏è –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –∞–Ω–æ–Ω–∏–º–Ω–æ.'
            )

        messages[sent_message.message_id] = message.from_user.id
        await message.answer("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–¥–º–∏–Ω—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
    sender_username = message.from_user.username or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
    recipient_chat = await message.bot.get_chat(referrer_id)
    recipient_username = recipient_chat.username or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
    admin_text = (
        f"–ù–æ–≤–æ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{sender_username} –¥–ª—è @{recipient_username}:\n\n{caption}"
    )

    if photo:
        # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        await message.bot.send_photo(
            chat_id=ADMIN_ID,
            photo=photo,
            caption=admin_text
        )
    else:
        # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
        await message.bot.send_message(chat_id=ADMIN_ID, text=admin_text)

    await state.clear()


@router.message(F.reply_to_message)
async def handle_reply(message: Message):
    original_message_id = message.reply_to_message.message_id
    if original_message_id in messages:
        sender_id = messages[original_message_id]

        try:
            await message.bot.send_message(
                chat_id=sender_id,
                text=f"–û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n{message.text}"
            )
            await message.answer("–í–∞—à –æ—Ç–≤–µ—Ç –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
        except Exception as e:
            await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç.")
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞: {e}")
        
        del messages[original_message_id]

@router.callback_query(F.data == "cancel")
async def cancel(callback: CallbackQuery, state: FSMContext):
    global bot_message_id
    await callback.answer()

    if bot_message_id:
        await callback.bot.delete_message(chat_id=callback.message.chat.id, message_id=bot_message_id)
        bot_message_id = None

    await state.clear()
    await callback.message.answer("–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")