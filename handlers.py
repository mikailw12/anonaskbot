from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
import keyboards

handler = Router()

# –£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π Telegram ID
ADMIN_ID = 1166639026  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π ID

class MessageText(StatesGroup):
    text = State()

bot_message_id = None

@handler.message(CommandStart())
async def start(message: Message, command: CommandStart, state: FSMContext):
    global bot_message_id
    referrer_id = command.args  # –ü–æ–ª—É—á–∞–µ–º ID –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏–∑ –¥–∏–ø–ª–∏–Ω–∫–∞

    if not referrer_id:
        # –ï—Å–ª–∏ –¥–∏–ø–ª–∏–Ω–∫ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç ID, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –≤–ª–∞–¥–µ–ª—å—Ü—É
        await message.answer(
            f'üöÄ–ù–∞—á–Ω–∏ –ø–æ–ª—É—á–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!\n\n–¢–≤–æ—è —Å—Å—ã–ª–∫–∞:\nüëâ t.me/anonimniyaskbot?start={message.from_user.id}\n\n–†–∞–∑–º–µ—Å—Ç–∏ —ç—Ç—É —Å—Å—ã–ª–∫—É ‚òùÔ∏è –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è Telegram/TikTok/Instagram, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è üí¨'
        )
    else:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –≤–ª–∞–¥–µ–ª—å—Ü–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        await state.update_data(referrer_id=referrer_id)
        await state.set_state(MessageText.text)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–∫—Å—Ç
        sent_message = await message.answer(
            'üöÄ–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ–∫—É, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—É–±–ª–∏–∫–æ–≤–∞–ª —ç—Ç—É —Å—Å—ã–ª–∫—É\n\n‚úçÔ∏è–ù–∞–ø–∏—à–∏—Ç–µ —Å—é–¥–∞ –≤—Å—ë, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –µ–º—É –ø–µ—Ä–µ–¥–∞—Ç—å, –∏ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –æ–Ω –ø–æ–ª—É—á–∏—Ç –≤–∞—à–µ üí¨ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–æ –Ω–µ –±—É–¥–µ—Ç –∑–Ω–∞—Ç—å –æ—Ç –∫–æ–≥–æ',
            reply_markup=keyboards.cancelkb
        )
        bot_message_id = sent_message.message_id  # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è

@handler.message(MessageText.text)
async def yes_text(message: Message, state: FSMContext):
    if not message.text:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
    else:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        data = await state.get_data()
        referrer_id = data.get("referrer_id")
        user_text = message.text

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤–ª–∞–¥–µ–ª—å—Ü—É —Å—Å—ã–ª–∫–∏
        if referrer_id:
            try:
                await message.bot.send_message(
                    chat_id=referrer_id,
                    text=f'–í–∞–º –ø—Ä–∏—à–ª–æ –Ω–æ–≤–æ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n{user_text}'
                )
                await message.answer("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ !")
            except Exception as e:
                await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–ª–∞–¥–µ–ª—å—Ü—É: {e}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∞–¥–º–∏–Ω—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ
        try:
            sender_username = message.from_user.username or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            recipient_chat = await message.bot.get_chat(referrer_id)
            recipient_username = recipient_chat.username or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            admin_text = (
                f"–ù–æ–≤–æ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n{user_text}\n\n"
                f"–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: @{sender_username}\n–ü–æ–ª—É—á–∞—Ç–µ–ª—å: @{recipient_username}"
            )
            await message.bot.send_message(
                chat_id=ADMIN_ID,
                text=admin_text
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É: {e}")

        await state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞

@handler.callback_query(F.data == "cancel")
async def cancel(callback: CallbackQuery, state: FSMContext):
    global bot_message_id
    await callback.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º callback-–∑–∞–ø—Ä–æ—Å

    # –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
    if bot_message_id:
        await callback.bot.delete_message(chat_id=callback.message.chat.id, message_id=bot_message_id)
        bot_message_id = None  # –û–±–Ω—É–ª—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è

    await state.clear()
    await callback.message.answer("–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
